# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class FilesystemRequest(UniversalBaseModel):
    command: str
    path: typing.Optional[str] = None
    content: typing.Optional[str] = None
    mode: typing.Optional[str] = None
    encoding: typing.Optional[str] = None
    view_range: typing.Optional[typing.List[int]] = None
    recursive: typing.Optional[bool] = None
    src: typing.Optional[str] = None
    dst: typing.Optional[str] = None
    old_str: typing.Optional[str] = None
    new_str: typing.Optional[str] = None
    line: typing.Optional[int] = None
    text: typing.Optional[str] = None
    lines: typing.Optional[typing.List[int]] = None
    all_occurrences: typing.Optional[bool] = None
    pattern: typing.Optional[str] = None
    case_sensitive: typing.Optional[bool] = None
    line_numbers: typing.Optional[bool] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
